import logging

from aap import Aap

log = logging.getLogger(__name__)


def abx_read(context: object, inputs: dict) -> dict:
    """
        This handler READS an inventory on an ansible automation platform server
        and returns information.

        Args:
            context: The context object containing information about the ABX event.
            inputs: The inputs provided for the ABX event.
        Returns:
            dict: The outputs generated by the ABX handler.
    """
    log.info(f"Reading resources for project: {inputs.get('__metadata').get('project')}")

    # Connect to server
    with Aap.from_aria(context=context, inputs=inputs) as aap:

        # Find inventory
        inventory_name = inputs.get('inventory_name')
        log.info(f"Inventory name: '{inventory_name}'")
        aap_inventory = aap.search_inventories(name=inventory_name)
        if not aap_inventory:
            msg = f"Inventory '{inventory_name}' could not be found on server '{aap.base_url}'"
            log.critical(msg)
            raise ValueError(msg)

        outputs = inputs
        # outputs['id'] = aap_inventory.id

        return outputs
