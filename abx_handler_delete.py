import logging

from aap import Aap, AriaInventory

log = logging.getLogger(__name__)


def abx_delete(context: object, inputs: dict):
    """
        This handler DELETES the resources as specified in the inputs.

        Args:
            context: The context object containing information about the ABX event.
            inputs: The inputs provided for the ABX event.
        Returns:
            dict: The outputs generated by the ABX handler.
    """
    log.info(f"Deleting resources for project: {inputs.get('__metadata').get('project')}")

    # Connect to server
    with Aap.from_aria(context=context, inputs=inputs) as aap:

        # Find inventory
        inventory_name = inputs.get('inventory_name')
        log.info(f"Inventory name: '{inventory_name}'")
        aap_inventories = aap.search_inventories(name=inventory_name)

        # Should only find on
        if len(aap_inventories) > 1:
            msg = f"Found multiple inventories with name '{inventory_name}' on server '{aap.base_url}'"
            log.critical(msg)
            raise ValueError(msg)

        # Create output
        outputs = inputs

        # Delete inventory
        if aap_inventories:
            aap_inventory = aap_inventories[0]
            log.info(f"Found inventory at {aap_inventory.url}")
            aap.delete_inventory(inventory=aap_inventory)

            outputs['delete'] = True
            # outputs['id'] = aap_inventory.id

        else:
            log.warning(f"No inventory found.")

    return outputs
